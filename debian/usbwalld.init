#!/bin/sh
# kFreeBSD do not accept scripts as interpreters, using #!/bin/sh and sourcing.
if [ true != "$INIT_D_SCRIPT_SOURCED" ] ; then
    set "$0" "$@"; INIT_D_SCRIPT_SOURCED=true . /lib/init/init-d-script
fi
### BEGIN INIT INFO
# Provides:          openscap-daemon
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Daemon for infrastructure SCAP compliance check
# Description:       This service is a daemon that allow periodic compliance
#                    scans of a complete infrastructure, supporting local
#                    check, remote check, VM or Docker check.
#                    The daemon is associated to a CLI allowing easy
#                    configuration of targets and  security profiles to
#                    evaluate and easy results and reports management
### END INIT INFO

set -e

# Author: Philippe Thierry <phil@reseau-libre.net>

if test -f /etc/default/usbwalld; then
    . /etc/default/usbwalld
fi

. /lib/lsb/init-functions



DESC="usbwalld"
DAEMON=/usr/sbin/usbwalld
PIDFILE=/var/run/usbwalld.pid

# running the dbus service when activated only. Disabled by default.
test "${USBWALLD_START}" = "yes" || exit 0

do_start() {
  if [ ! -f $PIDFILE ]; then
    log_daemon_msg "Starting USBWall daemon" "usbwalld" || true
    if start-stop-daemon --start --quiet --oknodo --pidfile $PIDFILE --make-pidfile --exec $DAEMON -- -d; then
      log_end_msg 0 || true
    else
      log_end_msg 1 || true
    fi
  else
    log_daemon_msg "USBWall daemon already started" "usbwalld" || true
    log_end_msg 1 || true
  fi
}

do_stop() {
  log_daemon_msg "Stopping USBWall daemon" "usbwalld" || true
  if start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE --remove-pidfile; then
    log_end_msg 0 || true
  else
    log_end_msg 1 || true
  fi
}
